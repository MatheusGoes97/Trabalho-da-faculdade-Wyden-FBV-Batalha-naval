#include <stdio.h>
#include <stdbool.h>

// Tamanho do tabuleiro
#define TAMANHO 10
// Tamanho dos navios
#define TAMANHO_NAVIO 3
// Representação da água e dos navios
#define AGUA 0
#define NAVIO 3

// Função para inicializar o tabuleiro com água
void inicializarTabuleiro(int tabuleiro[TAMANHO][TAMANHO]) {
    for (int i = 0; i < TAMANHO; i++) {
        for (int j = 0; j < TAMANHO; j++) {
            tabuleiro[i][j] = AGUA;
        }
    }
}

// Função para verificar se a posição do navio é válida
bool posicaoValida(int linha, int coluna, int tamanho, bool vertical, int tabuleiro[TAMANHO][TAMANHO]) {
    // Verifica se está dentro dos limites do tabuleiro
    if (vertical) {
        if (linha + tamanho - 1 >= TAMANHO) return false;
    } else {
        if (coluna + tamanho - 1 >= TAMANHO) return false;
    }
    
    // Verifica se não há sobreposição com outros navios
    for (int i = 0; i < tamanho; i++) {
        if (vertical) {
            if (tabuleiro[linha + i][coluna] != AGUA) return false;
        } else {
            if (tabuleiro[linha][coluna + i] != AGUA) return false;
        }
    }
    
    return true;
}

// Função para posicionar um navio no tabuleiro
void posicionarNavio(int tabuleiro[TAMANHO][TAMANHO], int linha, int coluna, int tamanho, bool vertical) {
    for (int i = 0; i < tamanho; i++) {
        if (vertical) {
            tabuleiro[linha + i][coluna] = NAVIO;
        } else {
            tabuleiro[linha][coluna + i] = NAVIO;
        }
    }
}

// Função para exibir o tabuleiro
void exibirTabuleiro(int tabuleiro[TAMANHO][TAMANHO]) {
    printf("\nTabuleiro de Batalha Naval:\n");
    printf("   ");
    for (int j = 0; j < TAMANHO; j++) {
        printf("%2d ", j); // Cabeçalho das colunas
    }
    printf("\n");
    
    for (int i = 0; i < TAMANHO; i++) {
        printf("%2d ", i); // Número da linha
        for (int j = 0; j < TAMANHO; j++) {
            printf("%2d ", tabuleiro[i][j]);
        }
        printf("\n");
    }
    printf("\nLegenda:\n");
    printf("0 - Agua\n");
    printf("3 - Navio\n\n");
}

int main() {
    int tabuleiro[TAMANHO][TAMANHO];
    
    // Inicializa o tabuleiro com água
    inicializarTabuleiro(tabuleiro);
    
    // Coordenadas dos navios (definidas no código)
    // Navio horizontal: linha 2, coluna 3
    int linha_h = 2, coluna_h = 3;
    // Navio vertical: linha 5, coluna 7
    int linha_v = 5, coluna_v = 7;
    
    // Posiciona o navio horizontal
    if (posicaoValida(linha_h, coluna_h, TAMANHO_NAVIO, false, tabuleiro)) {
        posicionarNavio(tabuleiro, linha_h, coluna_h, TAMANHO_NAVIO, false);
        printf("Navio horizontal posicionado com sucesso na linha %d, coluna %d.\n", linha_h, coluna_h);
    } else {
        printf("Erro: Posicao invalida para o navio horizontal (linha %d, coluna %d).\n", linha_h, coluna_h);
    }
    
    // Posiciona o navio vertical
    if (posicaoValida(linha_v, coluna_v, TAMANHO_NAVIO, true, tabuleiro)) {
        posicionarNavio(tabuleiro, linha_v, coluna_v, TAMANHO_NAVIO, true);
        printf("Navio vertical posicionado com sucesso na linha %d, coluna %d.\n", linha_v, coluna_v);
    } else {
        printf("Erro: Posicao invalida para o navio vertical (linha %d, coluna %d).\n", linha_v, coluna_v);
    }
    
    // Exibe o tabuleiro
    exibirTabuleiro(tabuleiro);
    
    return 0;
